//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CustomizeDesigners.Resources
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="", IsNullable=false)]
    public partial class root
    {
        
        private System.Collections.Generic.List<object> itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("assembly", typeof(rootAssembly), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("data", typeof(rootData), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("metadata", typeof(rootMetadata), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("resheader", typeof(rootResheader), Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public System.Collections.Generic.List<object> Items
        {
            get
            {
                return this.itemsField;
            }
            set
            {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class rootAssembly
    {
        
        private string aliasField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string alias
        {
            get
            {
                return this.aliasField;
            }
            set
            {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class rootData
    {
        
        private string valueField;
        
        private string commentField;
        
        private string nameField;
        
        private string typeField;
        
        private string mimetypeField;
        
        private string spaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=1)]
        public string comment
        {
            get
            {
                return this.commentField;
            }
            set
            {
                this.commentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string mimetype
        {
            get
            {
                return this.mimetypeField;
            }
            set
            {
                this.mimetypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/XML/1998/namespace")]
        public string space
        {
            get
            {
                return this.spaceField;
            }
            set
            {
                this.spaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class rootMetadata
    {
        
        private string valueField;
        
        private string nameField;
        
        private string typeField;
        
        private string mimetypeField;
        
        private string spaceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string type
        {
            get
            {
                return this.typeField;
            }
            set
            {
                this.typeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string mimetype
        {
            get
            {
                return this.mimetypeField;
            }
            set
            {
                this.mimetypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute(Form=System.Xml.Schema.XmlSchemaForm.Qualified, Namespace="http://www.w3.org/XML/1998/namespace")]
        public string space
        {
            get
            {
                return this.spaceField;
            }
            set
            {
                this.spaceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18408")]
    [System.SerializableAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true)]
    public partial class rootResheader
    {
        
        private string valueField;
        
        private string nameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Form=System.Xml.Schema.XmlSchemaForm.Unqualified, Order=0)]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
    }
    
    /// <summary>
    /// Factory class for classes defined in the root schema.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Reegenerator", "2.0.4.0")]
    public sealed partial class rootFactory
    {
        
        private static string[] _schemas = new string[] {
                "<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<xsd:schema id=\"root\" xmlns=\"\" xmlns:xs" +
                    "d=\"http://www.w3.org/2001/XMLSchema\" xmlns:msdata=\"urn:schemas-microsoft-com:xml" +
                    "-msdata\">\r\n\r\n  <xsd:annotation>\r\n\t\t\r\n  </xsd:annotation>\r\n\r\n  <xsd:import namesp" +
                    "ace=\"http://www.w3.org/XML/1998/namespace\" />\r\n  <xsd:element name=\"root\" msdata" +
                    ":IsDataSet=\"true\">\r\n    <xsd:complexType>\r\n      <xsd:choice maxOccurs=\"unbounde" +
                    "d\">\r\n        <xsd:element name=\"metadata\">\r\n          <xsd:complexType>\r\n       " +
                    "     <xsd:sequence>\r\n              <xsd:element name=\"value\" type=\"xsd:string\" m" +
                    "inOccurs=\"0\" />\r\n            </xsd:sequence>\r\n            <xsd:attribute name=\"n" +
                    "ame\" use=\"required\" type=\"xsd:string\" />\r\n            <xsd:attribute name=\"type\"" +
                    " type=\"xsd:string\" />\r\n            <xsd:attribute name=\"mimetype\" type=\"xsd:stri" +
                    "ng\" />\r\n            <xsd:attribute ref=\"xml:space\" />\r\n          </xsd:complexTy" +
                    "pe>\r\n        </xsd:element>\r\n        <xsd:element name=\"assembly\">\r\n          <x" +
                    "sd:complexType>\r\n            <xsd:attribute name=\"alias\" type=\"xsd:string\" />\r\n " +
                    "           <xsd:attribute name=\"name\" type=\"xsd:string\" />\r\n          </xsd:comp" +
                    "lexType>\r\n        </xsd:element>\r\n        <xsd:element name=\"data\">\r\n          <" +
                    "xsd:complexType>\r\n            <xsd:sequence>\r\n              <xsd:element name=\"v" +
                    "alue\" type=\"xsd:string\" minOccurs=\"0\" msdata:Ordinal=\"1\" />\r\n              <xsd:" +
                    "element name=\"comment\" type=\"xsd:string\" minOccurs=\"0\" msdata:Ordinal=\"2\" />\r\n  " +
                    "          </xsd:sequence>\r\n            <xsd:attribute name=\"name\" type=\"xsd:stri" +
                    "ng\" use=\"required\" msdata:Ordinal=\"1\" />\r\n            <xsd:attribute name=\"type\"" +
                    " type=\"xsd:string\" msdata:Ordinal=\"3\" />\r\n            <xsd:attribute name=\"mimet" +
                    "ype\" type=\"xsd:string\" msdata:Ordinal=\"4\" />\r\n            <xsd:attribute ref=\"xm" +
                    "l:space\" />\r\n          </xsd:complexType>\r\n        </xsd:element>\r\n        <xsd:" +
                    "element name=\"resheader\">\r\n          <xsd:complexType>\r\n            <xsd:sequenc" +
                    "e>\r\n              <xsd:element name=\"value\" type=\"xsd:string\" minOccurs=\"0\" msda" +
                    "ta:Ordinal=\"1\" />\r\n            </xsd:sequence>\r\n            <xsd:attribute name=" +
                    "\"name\" type=\"xsd:string\" use=\"required\" />\r\n          </xsd:complexType>\r\n      " +
                    "  </xsd:element>\r\n      </xsd:choice>\r\n    </xsd:complexType>\r\n  </xsd:element>\r" +
                    "\n\r\n</xsd:schema>\r\n"};
        
        private static System.Xml.Schema.XmlSchemaSet _xmlSchemaSet;
        
        private System.Text.StringBuilder _sb;
        
        static rootFactory()
        {
            _xmlSchemaSet = new System.Xml.Schema.XmlSchemaSet();
            for (int i = 0; (i < _schemas.Length); i = (i + 1))
            {
                _xmlSchemaSet.Add(System.Xml.Schema.XmlSchema.Read(new System.IO.StringReader(_schemas[i]), null));
            }
            _xmlSchemaSet.Compile();
        }
        
        /// <summary>
        /// The contents of the root schema and the imported schema.
        /// It is used to check the validity of XML files against the XML schema.
        /// </summary>
        public static string[] Schemas
        {
            get
            {
                return _schemas;
            }
        }
        
        /// <summary>
        /// Gets a compiled schema set containing the root schema and all included schemas.
        /// </summary>
        public static System.Xml.Schema.XmlSchemaSet XmlSchemaSet
        {
            get
            {
                return _xmlSchemaSet;
            }
        }
        
        private void ValidationCallBack(object sender, System.Xml.Schema.ValidationEventArgs e)
        {
            if ((this._sb.Length > 0))
            {
                this._sb.AppendLine();
            }
            this._sb.AppendFormat("Xml Validation Error ({0}, {1}): {2}", e.Exception.LineNumber, e.Exception.LinePosition, e.Message);
        }
        
        private T DoCreate<T>(System.Xml.XmlReader xmlReader)
        
        {
            if ((xmlReader == null))
            {
                throw new System.ArgumentNullException("xmlReader");
            }
            this._sb = new System.Text.StringBuilder();
            System.Xml.XmlReaderSettings xmlReaderSettings = new System.Xml.XmlReaderSettings();
            xmlReaderSettings.ValidationType = System.Xml.ValidationType.Schema;
            xmlReaderSettings.Schemas = XmlSchemaSet;
            xmlReaderSettings.ValidationEventHandler += new System.Xml.Schema.ValidationEventHandler(this.ValidationCallBack);
            System.Xml.Serialization.XmlSerializer xmlSerializer = new System.Xml.Serialization.XmlSerializer(typeof(T));
            T result;
            System.Xml.XmlReader validatingXmlReader = System.Xml.XmlReader.Create(xmlReader, xmlReaderSettings);
            try
            {
                result = ((T)(xmlSerializer.Deserialize(validatingXmlReader)));
            }
            finally
            {
                ((System.IDisposable)(validatingXmlReader)).Dispose();
            }
            string errors = this._sb.ToString();
            if ((errors.Length > 0))
            {
                throw new System.Xml.XmlException(errors);
            }
            return result;
        }
        
        /// <summary>
        /// Creates an object by deserializing the content of an xml document
        /// into an instance of the <typeparamref name="T"/>.
        /// <typeparamref name="T"/> must implement IInitializable to be initialized post creation.
        /// </summary>
        /// <typeparam name="T">The type of the instance to be created from the <paramref name="xmlReader"/>.</typeparam>
        /// <param name="xmlReader">The XML file project item.</param>
        /// <returns>An instance of type <typeparamref name="T"/>.</returns>"
        public static T Create<T>(System.Xml.XmlReader xmlReader)
        
        {
            return new rootFactory().DoCreate<T>(xmlReader);
        }
        
        /// <summary>
        /// Creates an object by deserializing the content of an xml document
        /// into an instance of the <typeparamref name="T"/>.
        /// <typeparamref name="T"/> must implement IInitializable to be initialized post creation.
        /// </summary>
        /// <typeparam name="T">The type of the instance to be created from the <paramref name="stream"/>.</typeparam>
        /// <param name="stream">The XML file project item.</param>
        /// <returns>An instance of type <typeparamref name="T"/>.</returns>"
        public static T Create<T>(System.IO.Stream stream)
        
        {
            if ((stream == null))
            {
                throw new System.ArgumentNullException("stream");
            }
            System.Xml.XmlReader xmlReader = System.Xml.XmlReader.Create(stream);
            try
            {
                return Create<T>(xmlReader);
            }
            finally
            {
                ((System.IDisposable)(xmlReader)).Dispose();
            }
        }
        
        /// <summary>
        /// Creates an object by deserializing the content of an xml document
        /// into an instance of the <typeparamref name="T"/>.
        /// <typeparamref name="T"/> must implement IInitializable to be initialized post creation.
        /// </summary>
        /// <typeparam name="T">The type of the instance to be created from the <paramref name="path"/>.</typeparam>
        /// <param name="path">The XML file project item.</param>
        /// <returns>An instance of type <typeparamref name="T"/>.</returns>"
        public static T Create<T>(string path)
        
        {
            if (string.IsNullOrEmpty(path))
            {
                throw new System.ArgumentNullException("path");
            }
            System.Xml.XmlReader xmlReader = System.Xml.XmlReader.Create(path);
            try
            {
                return Create<T>(xmlReader);
            }
            finally
            {
                ((System.IDisposable)(xmlReader)).Dispose();
            }
        }
        
        /// <summary>
        /// Creates an object by deserializing the content of an xml document
        /// into an instance of the <typeparamref name="T"/>.
        /// <typeparamref name="T"/> must implement IInitializable to be initialized post creation.
        /// </summary>
        /// <typeparam name="T">The type of the instance to be created from the <paramref name="textReader"/>.</typeparam>
        /// <param name="textReader">The XML file project item.</param>
        /// <returns>An instance of type <typeparamref name="T"/>.</returns>"
        public static T Create<T>(System.IO.TextReader textReader)
        
        {
            if ((textReader == null))
            {
                throw new System.ArgumentNullException("textReader");
            }
            System.Xml.XmlReader xmlReader = System.Xml.XmlReader.Create(textReader);
            try
            {
                return Create<T>(xmlReader);
            }
            finally
            {
                ((System.IDisposable)(xmlReader)).Dispose();
            }
        }
        
        /// <summary>
        /// Creates an object by deserializing the content of an xml document
        /// into an instance of the <typeparamref name="T"/>.
        /// <typeparamref name="T"/> must implement IInitializable to be initialized post creation.
        /// </summary>
        /// <typeparam name="T">The type of the instance to be created from the <paramref name="projectItem"/>.</typeparam>
        /// <param name="projectItem">The XML file project item.</param>
        /// <returns>An instance of type <typeparamref name="T"/>.</returns>"
        public static T Create<T>(Kodeo.Reegenerator.Wrappers.ProjectItem projectItem)
        
        {
            if ((projectItem == null))
            {
                throw new System.ArgumentNullException("projectItem");
            }
            T result = Create<T>(projectItem.FullPath);
            if (typeof(Kodeo.Reegenerator.Generators.Xsd.IInitializable).IsAssignableFrom(typeof(T)))
            {
                ((Kodeo.Reegenerator.Generators.Xsd.IInitializable)(result)).Init(projectItem);
            }
            return result;
        }
    }
}
